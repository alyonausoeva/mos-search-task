{"version":3,"sources":["pages/SearchPage/components/SearchForm/assets/cross.svg","components/Button/Button.tsx","modules/Pokemon/constants.ts","modules/Pokemon/duck.js","modules/Pokemon/selectors.js","modules/Pokemon/api.ts","modules/Pokemon/sagas.js","pages/SearchPage/components/SearchForm/SearchForm.hooks/useKeyPress.tsx","pages/SearchPage/components/SearchForm/SearchPage-SearchForm.tsx","pages/SearchPage/components/SearchForm/SearchForm.hooks/useHandleSugget.ts","pages/SearchPage/components/SearchForm/SearchForm.hooks/useHelpers.ts","pages/SearchPage/components/SearchForm/SearchForm.hooks/useHandleKey.ts","pages/SearchPage/components/SearchResult/SearchPage-SearchResult.tsx","pages/SearchPage/SearchPage.tsx","pages/App/App.tsx","modules/index.ts","store.ts","index.tsx"],"names":["module","exports","Button","className","disabled","cnButton","cn","FETCH_SUGGESTIONS_REQUEST","FETCH_SUGGESTIONS_SUCCESS","FETCH_SUGGESTIONS_ERROR","FETCH_POKEMON_REQUEST","FETCH_POKEMON_SUCCESS","FETCH_POKEMON_ERROR","REMOVE_POKEMON","fetchSuggestionsRequest","createAction","constants","fetchSuggestionsSuccess","fetchSuggestionsError","fetchPokemonRequest","fetchPokemonSuccess","fetchPokemonError","removePokemon","searchSuggestions","handleActions","_state","action","payload","searchResults","combineReducers","getSearchSuggestions","state","search","getSearchResults","a","fetch","response","json","data","results","map","item","name","searchParam","height","weight","abilities","fetchSuggestionsWatcher","fetchSuggestionsFlow","fetchPokemonFlow","takeLatest","searchParams","call","put","useKeyPress","key","useEffect","onKeyup","e","window","addEventListener","removeEventListener","SearchForm","value","setValue","isVisible","setVisibility","cnSearchForm","useState","suggestions","setSuggestions","cursor","setCursor","input","useRef","selectedData","useSelector","handleKeyPress","handleSugget","useCallback","current","focus","useHandlSugget","dispatch","useDispatch","handleChange","handleSubmit","preventDefault","handleRemove","useHelpers","prev","length","useHandleKey","newSuggestions","filter","toLowerCase","startsWith","onSubmit","type","onChange","target","ref","autoFocus","onKeyPress","onClick","src","require","alt","index","newItem","replace","hovered","SearchResult","pokemon","cnSearchPage","toUpperCase","ability","Search","rootEl","contains","document","App","cnApp","rootSaga","fork","searchSagas","createAppStore","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","run","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.6ef4aa43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cross.c1782b81.svg\";","import React, { FC } from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport './Button.scss';\n\nexport interface IButtonProps {\n    className?: string;\n    disabled: boolean;\n}\n\nconst Button: FC<IButtonProps> = ({ className, disabled }) => {\n    const cnButton = cn('Button');\n\n    return (\n        <button\n            className={cnButton({ disabled }, [className])}\n            disabled={disabled}\n        >\n            Поиск\n        </button>\n    );\n};\n\nexport default Button;\n","const STORE_KEY = 'POKEMON';\n\nexport const FETCH_SUGGESTIONS_REQUEST = `${STORE_KEY}/FETCH_SUGGESTIONS_REQUEST`;\nexport const FETCH_SUGGESTIONS_SUCCESS = `${STORE_KEY}/FETCH_SUGGESTIONS_SUCCESS`;\nexport const FETCH_SUGGESTIONS_ERROR = `${STORE_KEY}/FETCH_SUGGESTIONS_ERROR`;\n\nexport const FETCH_POKEMON_REQUEST = `${STORE_KEY}/FETCH_POKEMON_REQUEST`;\nexport const FETCH_POKEMON_SUCCESS = `${STORE_KEY}/FETCH_POKEMON_SUCCESS`;\nexport const FETCH_POKEMON_ERROR = `${STORE_KEY}/FETCH_POKEMON_FAILURE`;\nexport const REMOVE_POKEMON = `${STORE_KEY}/REMOVE_POKEMON`;\n","import { createAction, handleActions } from 'redux-actions';\nimport { combineReducers } from 'redux';\n\nimport * as constants from './constants';\n\nexport const fetchSuggestionsRequest = createAction(\n    constants.FETCH_SUGGESTIONS_REQUEST\n);\nexport const fetchSuggestionsSuccess = createAction(\n    constants.FETCH_SUGGESTIONS_SUCCESS\n);\nexport const fetchSuggestionsError = createAction(\n    constants.FETCH_SUGGESTIONS_ERROR\n);\n\nexport const fetchPokemonRequest = createAction(\n    constants.FETCH_POKEMON_REQUEST\n);\nexport const fetchPokemonSuccess = createAction(\n    constants.FETCH_POKEMON_SUCCESS\n);\nexport const fetchPokemonError = createAction(constants.FETCH_POKEMON_ERROR);\nexport const removePokemon = createAction(constants.REMOVE_POKEMON);\n\nconst searchSuggestions = handleActions(\n    {\n        [fetchSuggestionsRequest]: () => null,\n        [fetchSuggestionsSuccess]: (_state, action) => action.payload,\n        [fetchSuggestionsError]: (_state, action) => action.payload\n    },\n    null\n);\n\nconst searchResults = handleActions(\n    {\n        [fetchPokemonRequest]: () => null,\n        [fetchPokemonSuccess]: (_state, action) => action.payload,\n        [fetchPokemonError]: (_state, action) => action.payload,\n        [removePokemon]: () => null\n    },\n    null\n);\n\nexport default combineReducers({\n    searchSuggestions,\n    searchResults\n});\n","export const getSearchSuggestions = state => state.search.searchSuggestions;\n\nexport const getSearchResults = state => state.search.searchResults;\n","export const getSearchSuggestions = async () => {\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/`);\n    const data = await response.json();\n    const searchSuggestions = data.results.map((item: any) => item.name);\n\n    return searchSuggestions;\n};\n\nexport const getSearchResults = async (searchParam: string) => {\n    const response = await fetch(\n        `https://pokeapi.co/api/v2/pokemon/${searchParam}`\n    );\n    const { name, height, weight, abilities } = await response.json();\n    return { name, height, weight, abilities };\n};\n","import { takeLatest, call, put } from 'redux-saga/effects';\n\nimport {\n    fetchSuggestionsRequest,\n    fetchSuggestionsSuccess,\n    fetchSuggestionsError,\n    fetchPokemonRequest,\n    fetchPokemonSuccess,\n    fetchPokemonError\n} from './duck';\nimport { getSearchSuggestions, getSearchResults } from './api';\n\nfunction* fetchSuggestionsWatcher() {\n    yield takeLatest(fetchSuggestionsRequest, fetchSuggestionsFlow);\n    yield takeLatest(fetchPokemonRequest, fetchPokemonFlow);\n}\n\nfunction* fetchSuggestionsFlow(action) {\n    try {\n        const searchParams = action.payload;\n        const searchSuggestions = yield call(\n            getSearchSuggestions,\n            searchParams\n        );\n\n        yield put(fetchSuggestionsSuccess(searchSuggestions));\n    } catch (error) {\n        yield put(fetchSuggestionsError(error));\n    }\n}\n\nfunction* fetchPokemonFlow(action) {\n    try {\n        const searchParams = action.payload;\n\n        const searchResults = yield call(getSearchResults, searchParams);\n\n        yield put(fetchPokemonSuccess(searchResults));\n    } catch (error) {\n        yield put(fetchPokemonError(error));\n    }\n}\n\nexport default function*() {\n    yield fetchSuggestionsWatcher();\n}\n","import { useEffect } from 'react';\n\nexport const useKeyPress = (key: string, action: any) => {\n    useEffect(() => {\n        function onKeyup(e: any) {\n            if (e.key === key) action(e);\n        }\n        window.addEventListener('keyup', onKeyup);\n        return () => window.removeEventListener('keyup', onKeyup);\n    }, [action, key]);\n};\n","import React, {\n    useState,\n    useEffect,\n    Dispatch,\n    SetStateAction,\n    KeyboardEvent,\n    useRef\n} from 'react';\nimport { cn } from '@bem-react/classname';\nimport { useSelector } from 'react-redux';\n\nimport Button from 'components/Button';\nimport { getSearchSuggestions } from 'modules/Pokemon';\nimport { useKeyPress } from './SearchForm.hooks';\nimport { useHelpers } from './SearchForm.hooks';\nimport { useHandleKey } from './SearchForm.hooks';\nimport { useHandlSugget } from './SearchForm.hooks';\nimport './SearchPage-SearchForm.scss';\n\ninterface SearchFormProps {\n    value: string;\n    isVisible: boolean;\n    setValue: Dispatch<SetStateAction<string>>;\n    setVisibility: Dispatch<SetStateAction<boolean>>;\n}\n\nconst SearchForm: React.FC<SearchFormProps> = ({\n    value,\n    setValue,\n    isVisible,\n    setVisibility\n}: SearchFormProps) => {\n    const cnSearchForm = cn('SearchForm');\n\n    const [suggestions, setSuggestions] = useState<Array<string>>([]);\n    const [cursor, setCursor] = useState<number>(-1);\n    const input = useRef<HTMLInputElement>(null);\n    const selectedData = useSelector(getSearchSuggestions);\n\n    useKeyPress('Escape', (e: KeyboardEvent<HTMLInputElement>) => {\n        handleKeyPress(e);\n    });\n    useKeyPress('Enter', (e: KeyboardEvent<HTMLInputElement>) => {\n        handleKeyPress(e);\n    });\n\n    useKeyPress('ArrowDown', (e: KeyboardEvent<HTMLInputElement>) => {\n        handleKeyPress(e);\n    });\n    useKeyPress('ArrowUp', (e: KeyboardEvent<HTMLInputElement>) => {\n        handleKeyPress(e);\n    });\n\n    const handleSugget = useHandlSugget(input, setValue, setVisibility);\n\n    const { handleSubmit, handleChange, handleRemove } = useHelpers(\n        value,\n        setValue,\n        setVisibility,\n        setSuggestions\n    );\n\n    const handleKeyPress = useHandleKey(\n        handleRemove,\n        isVisible,\n        handleSubmit,\n        suggestions,\n        setCursor\n    );\n\n    useEffect(() => {\n        const newSuggestions =\n            selectedData &&\n            selectedData.filter(\n                (item: string) =>\n                    value.toLowerCase() &&\n                    item.toLowerCase().startsWith(value.toLowerCase())\n            );\n\n        setSuggestions(newSuggestions);\n    }, [value, selectedData]);\n\n    return (\n        <div>\n            <form className={cnSearchForm()} onSubmit={handleSubmit}>\n                <div className={cnSearchForm('InputBox')}>\n                    <input\n                        className={cnSearchForm('Input')}\n                        type=\"text\"\n                        value={value}\n                        onChange={e => handleChange(e.target.value)}\n                        ref={input}\n                        autoFocus={true}\n                        onKeyPress={handleKeyPress}\n                    />\n\n                    <div\n                        className={cnSearchForm('IconBox')}\n                        onClick={handleRemove}\n                    >\n                        {value && (\n                            <img\n                                className={cnSearchForm('Icon')}\n                                src={require('./assets/cross.svg')}\n                                alt=\"cross\"\n                            />\n                        )}\n                    </div>\n\n                    <Button disabled={!value} />\n                </div>\n\n                {isVisible && suggestions && suggestions.length > 0 && (\n                    <div className={cnSearchForm('SuggestsList')}>\n                        {suggestions.map((item: string, index: number) => {\n                            value = value.toLowerCase();\n                            const newItem = item\n                                .toLowerCase()\n                                .replace(value, '');\n\n                            return (\n                                <div key={item}>\n                                    {' '}\n                                    {index < 4 && (\n                                        <div\n                                            className={cnSearchForm('Suggest', [\n                                                cnSearchForm({\n                                                    hovered: cursor === index\n                                                })\n                                            ])}\n                                            onClick={() => {\n                                                handleSugget(item);\n                                            }}\n                                        >\n                                            {value}\n                                            <b>{newItem}</b>\n                                        </div>\n                                    )}\n                                </div>\n                            );\n                        })}\n                    </div>\n                )}\n            </form>\n        </div>\n    );\n};\n\nexport default SearchForm;\n","import { useCallback } from 'react';\n\nexport const useHandlSugget = (\n    input: React.RefObject<HTMLInputElement>,\n    setValue: any,\n    setVisibility: React.Dispatch<React.SetStateAction<boolean>>\n) => {\n    const handleSugget = useCallback(\n        (searchParam: string) => {\n            input.current && input.current.focus();\n            setValue(searchParam);\n            setVisibility(true);\n        },\n        [setValue, setVisibility, input]\n    );\n\n    return handleSugget;\n};\n","import { useDispatch } from 'react-redux';\nimport { useCallback } from 'react';\n\nimport { fetchSuggestionsRequest, fetchPokemonRequest } from 'modules/Pokemon';\n\nexport const useHelpers = (\n    value: string,\n    setValue: React.Dispatch<React.SetStateAction<string>>,\n    setVisibility: React.Dispatch<React.SetStateAction<boolean>>,\n    setSuggestions: React.Dispatch<React.SetStateAction<string[]>>\n) => {\n    const dispatch = useDispatch();\n\n    const handleChange = useCallback(\n        value => {\n            setValue(value);\n            dispatch(fetchSuggestionsRequest());\n            setVisibility(true);\n        },\n        [setValue, dispatch, setVisibility]\n    );\n\n    const handleSubmit = useCallback(\n        async e => {\n            e.preventDefault();\n            setSuggestions([]);\n            dispatch(fetchPokemonRequest(value));\n        },\n        [dispatch, value, setSuggestions]\n    );\n\n    const handleRemove = useCallback(() => {\n        setValue('');\n    }, [setValue]);\n\n    return {\n        handleChange,\n        handleSubmit,\n        handleRemove\n    };\n};\n","import { useCallback, KeyboardEvent } from 'react';\n\nexport const useHandleKey = (\n    handleRemove: any,\n    isVisible: boolean,\n    handleSubmit: any,\n    suggestions: Array<string>,\n    setCursor: React.Dispatch<React.SetStateAction<number>>\n) => {\n    const handleKeyPress = useCallback(\n        (e: KeyboardEvent<HTMLInputElement>) => {\n            if (e.key === 'ArrowDown') {\n                isVisible &&\n                    setCursor((prev: number) =>\n                        prev < suggestions.length - 1 ? ++prev : prev\n                    );\n            }\n            if (e.key === 'ArrowUp') {\n                setCursor((prev: number) => (prev > 0 ? --prev : prev));\n            }\n            if (e.key === 'Escape') {\n                handleRemove();\n            }\n            if (e.key === 'Enter') {\n                handleSubmit(e);\n            }\n        },\n        [handleRemove, isVisible, handleSubmit, suggestions, setCursor]\n    );\n\n    return handleKeyPress;\n};\n","import React from 'react';\n\nimport { cnSearchPage } from 'pages/SearchPage';\nimport './SearchPage-SearchResult.scss';\n\ninterface ISearchResultProps {\n    pokemon: any;\n}\n\nconst SearchResult: React.FC<ISearchResultProps> = ({ pokemon }: any) => {\n    return (\n        <div className={cnSearchPage('SearchResult')}>\n            <h3 className={cnSearchPage('Name')}>\n                {pokemon.abilities\n                    ? `Покемон ${pokemon.name.toUpperCase()}`\n                    : 'No result'.toUpperCase()}\n            </h3>\n            {pokemon.abilities && (\n                <div>\n                    <div> Height: {pokemon.weight}</div>\n                    <div> Weight: {pokemon.height}</div>\n                    <ul className={cnSearchPage('Abilities')}>\n                        Abilities:{' '}\n                        {pokemon.abilities &&\n                            pokemon.abilities.map((item: any) => {\n                                return (\n                                    <li\n                                        className={cnSearchPage('Ability')}\n                                        key={item.ability.name}\n                                    >\n                                        {item.ability.name}\n                                    </li>\n                                );\n                            })}\n                    </ul>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SearchResult;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector } from 'react-redux';\nimport { cn } from '@bem-react/classname';\n\nimport SearchForm from './components/SearchForm';\nimport SearchResult from './components/SearchResult';\nimport { getSearchResults } from 'modules/Pokemon';\nimport './SearchPage.scss';\n\nexport const cnSearchPage = cn('SearchPage');\n\nconst Search: React.FC = () => {\n    const pokemon = useSelector(getSearchResults);\n    const [value, setValue] = useState<string>('');\n    const rootEl = useRef<HTMLDivElement>(null);\n    const [isVisible, setVisibility] = useState(true);\n\n    useEffect(() => {\n        const onClick = (e: any) =>\n            (rootEl.current && rootEl.current.contains(e.target)) ||\n            setVisibility(false);\n        document.addEventListener('click', onClick);\n\n        return () => document.removeEventListener('click', onClick);\n    }, [isVisible]);\n\n    return (\n        <>\n            <div ref={rootEl}>\n                <SearchForm\n                    value={value}\n                    setValue={setValue}\n                    isVisible={isVisible}\n                    setVisibility={setVisibility}\n                />\n            </div>\n            {pokemon && <SearchResult pokemon={pokemon} />}\n        </>\n    );\n};\n\nexport default Search;\n","import React from 'react';\nimport { cn } from '@bem-react/classname';\n\nimport Search from 'pages/SearchPage';\nimport './App.scss';\n\nconst App: React.FC = () => {\n    const cnApp = cn('App');\n\n    return (\n        <div className={cnApp()}>\n            <div>\n                <Search />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { fork } from 'redux-saga/effects';\n\nimport search, { sagas as searchSagas } from './Pokemon';\n\nexport default combineReducers({\n    search\n});\n\nexport function* rootSaga() {\n    yield fork(searchSagas);\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer, { rootSaga } from './modules';\n\ndeclare global {\n    interface Window {\n        __REDUX_DEVTOOLS_EXTENSION__?: typeof compose;\n    }\n}\n\nconst createAppStore = () => {\n    const sagaMiddleware = createSagaMiddleware();\n\n    const store = createStore(\n        rootReducer,\n        compose(\n            applyMiddleware(sagaMiddleware),\n            window.__REDUX_DEVTOOLS_EXTENSION__\n                ? window.__REDUX_DEVTOOLS_EXTENSION__()\n                : (f: any) => f\n        )\n    );\n\n    sagaMiddleware.run(rootSaga);\n\n    return store;\n};\n\nexport default createAppStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './pages/App/';\nimport createStore from './store';\nimport './index.scss';\n\nconst store = createStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.querySelector('.Root')\n);\n"],"sourceRoot":""}